import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card";
import { Input } from "@/components/ui/input";
import { useIsMobile } from "@/hooks/use-mobile";
import { ProtectedLayout } from "@/components/layouts/authenticated";
import { Accordion, AccordionContent, AccordionItem, AccordionTrigger } from "@/components/ui/accordion";
import { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from "@/components/ui/table";
import { Button } from "@/components/ui/button";
import { Loading } from "@/components/Loading";

export default function Dashboard() {
    const isMobile = useIsMobile();

    const user = {
        firstName: "Christian",
    }

    return (
        <ProtectedLayout className={`flex w-full flex-col gap-4 ${!isMobile ? "pr-4" : "pr-2"}`}>
            <Card>
                <CardHeader>
                    <CardTitle>Willkommen zurück, {user?.firstName}!</CardTitle>
                    <CardDescription>Schön, dass du wieder da bist.</CardDescription>
                </CardHeader>
            </Card>
            <div className="flex gap-4 max-lg:flex-wrap">
                <Card className="flex-1 max-lg:w-full lg:min-w-80">
                    <CardHeader>
                        <CardTitle>Kommende Veranstaltungen</CardTitle>
                        <CardDescription>Upcomming Events</CardDescription>
                    </CardHeader>
                    <CardContent>
                        {/* TODO: add filter/ search */}
                        <Input placeholder="Nach Veranstaltung suchen..." disabled />
                        <div className="mt-4">
                            {eventsQuery.isLoading ? (
                                <Loading />
                            ) : eventsQuery.isError ? (
                                "Error Loading Events"
                            ) : (
                                <Accordion type="single" collapsible>
                                    {eventsQuery.data?.map((event) => (
                                        <AccordionItem value={event.id.toString()} key={event.id}>
                                            <AccordionTrigger>
                                                <AccordionItemTitle {...event} />
                                            </AccordionTrigger>
                                            <AccordionContent>
                                                <Table>
                                                    <TableHeader>
                                                        <TableRow>
                                                            <TableHead>Datum</TableHead>
                                                            <TableHead>Von - Bis</TableHead>
                                                            <TableHead>Techniker</TableHead>
                                                            <TableHead className="text-center">Aktionen</TableHead>
                                                        </TableRow>
                                                    </TableHeader>
                                                    <TableBody>
                                                        {event.datetimes.map((datetime, index) => (
                                                            <TableRow key={index}>
                                                                <TableCell className="font-medium">
                                                                    {datetime.date}
                                                                </TableCell>
                                                                <TableCell>
                                                                    {datetime.start} - {datetime.end} Uhr
                                                                </TableCell>
                                                                <TableCell>
                                                                    {datetime.technicians.length === 0
                                                                        ? "- keine Techniker eingetragen -"
                                                                        : datetime.technicians.map((t, i) => {
                                                                              if (
                                                                                  i ===
                                                                                  datetime.technicians.length - 1
                                                                              ) {
                                                                                  return t;
                                                                              }
                                                                              return `${t}, `;
                                                                          })}
                                                                </TableCell>
                                                                <TableCell className="flex flex-col gap-2">
                                                                    {/* TODO: add actions */}
                                                                    <Button size="sm" variant="ghost">
                                                                        Eintragen
                                                                    </Button>
                                                                    <Button size="sm" variant="ghost">
                                                                        Austragen
                                                                    </Button>
                                                                    {/* TODO: add link to event */}
                                                                    <Button size="sm" variant="outline">
                                                                        Details
                                                                    </Button>
                                                                </TableCell>
                                                            </TableRow>
                                                        ))}
                                                    </TableBody>
                                                </Table>
                                            </AccordionContent>
                                        </AccordionItem>
                                    ))}
                                </Accordion>
                            )}
                        </div>
                    </CardContent>
                </Card>
                <DashboardChartCard className="h-fit w-1/3 max-lg:w-full lg:min-w-80" />
            </div>
        </ProtectedLayout>
    );
}

function AccordionItemTitle(event: RequestEvent) {
    return (
        <div>
            <span className="font-semibold">{event.title}</span>
            {" | "}
            {event.datetimes.map((datetime, index) => {
                if (datetime.technicians.length === 0) {
                    return (
                        <span className="text-atec-yellow-400" key={index}>
                            {datetime.date} {datetime.start}-{datetime.end} (keine Techniker bisher)
                            {index < event.datetimes.length - 1 ? ", " : ""}
                        </span>
                    );
                }

                return (
                    <span key={index}>
                        {datetime.date} {datetime.start}-{datetime.end} ({datetime.technicians.length} Techniker)
                        {index < event.datetimes.length - 1 ? ", " : ""}
                    </span>
                );
            })}
        </div>
    );
}
